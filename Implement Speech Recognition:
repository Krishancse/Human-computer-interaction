Here's an example of how you might implement speech recognition using Java and Google Cloud Speech-to-Text API:

Step 1: Set Up Google Cloud Credentials:

Create a Google Cloud account if you don't have one.
Create a new project and enable the Speech-to-Text API.
Generate API credentials (JSON key) and store them securely.
Step 2: Include Required Libraries:

You'll need the Google Cloud Speech-to-Text client library. Include it in your Java project's dependencies.

Step 3: Implement Speech Recognition:

import com.google.cloud.speech.v1.RecognitionConfig;
import com.google.cloud.speech.v1.RecognitionAudio;
import com.google.cloud.speech.v1.RecognitionAudio.Builder;
import com.google.cloud.speech.v1.RecognitionAudioContent;
import com.google.cloud.speech.v1.RecognizeResponse;
import com.google.cloud.speech.v1.SpeechClient;
import com.google.cloud.speech.v1.SpeechRecognitionAlternative;
import com.google.cloud.speech.v1.SpeechRecognitionResult;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;

public class SpeechRecognitionExample {

    public static void main(String[] args) throws Exception {
        // Path to the audio file you want to transcribe
        String audioFilePath = "path/to/audio/file.wav";

        // Initialize the SpeechClient
        try (SpeechClient speechClient = SpeechClient.create()) {

            // Load the audio file
            Path path = Paths.get(audioFilePath);
            byte[] data = Files.readAllBytes(path);
            RecognitionAudio recognitionAudio =
                RecognitionAudio.newBuilder().setContent(RecognitionAudioContent.newBuilder()
                    .setContentBytes(data)
                    .build())
                    .build();

            // Configure the recognition settings
            RecognitionConfig recognitionConfig =
                RecognitionConfig.newBuilder()
                    .setLanguageCode("en-US")  // Language code, e.g., en-US
                    .build();

            // Perform speech recognition
            RecognizeResponse response = speechClient.recognize(recognitionConfig, recognitionAudio);

            // Process the recognition results
            List<SpeechRecognitionResult> results = response.getResultsList();
            for (SpeechRecognitionResult result : results) {
                List<SpeechRecognitionAlternative> alternatives = result.getAlternativesList();
                for (SpeechRecognitionAlternative alternative : alternatives) {
                    System.out.println("Transcript: " + alternative.getTranscript());
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

